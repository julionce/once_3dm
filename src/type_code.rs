use num_enum::{IntoPrimitive, TryFromPrimitive};

use crate::{
    deserialize,
    deserialize::{Deserialize, FileVersion},
    error::{Error, ErrorKind, ErrorStack},
};

#[repr(u32)]
enum Flags {
    LegacyGeometry = 0x00010000,
    OpenNurbsObject = 0x00020000,
    Geometry = 0x00100000,
    Annotation = 0x00200000,
    Display = 0x00400000,
    Render = 0x00800000,
    Interface = 0x02000000,
    Tolerance = 0x08000000,
    Table = 0x10000000,
    TableRec = 0x20000000,
    User = 0x40000000,
    Short = 0x80000000,
    Crc = 0x8000,
    Stuff = 0x0100,
}

#[derive(Debug, PartialEq, Clone, Copy, TryFromPrimitive, IntoPrimitive)]
#[repr(u32)]
pub enum TypeCode {
    Null = 0x00000000,
    CommentBlock = 0x00000001,
    EndOfFile = 0x00007FFF,
    EndOfFileGoo = 0x00007FFE,
    LegacyGeometry = Flags::LegacyGeometry as u32,
    OpenNurbsObject = Flags::OpenNurbsObject as u32,
    Geometry = Flags::Geometry as u32,
    Annotation = Flags::Annotation as u32,
    Display = Flags::Display as u32,
    Render = Flags::Render as u32,
    Interface = Flags::Interface as u32,
    Tolerance = Flags::Tolerance as u32,
    Table = Flags::Table as u32,
    TableRec = Flags::TableRec as u32,
    User = Flags::User as u32,
    Short = Flags::Short as u32,
    Crc = Flags::Crc as u32,
    AnonymousChunk = Flags::User as u32 | Flags::Crc as u32 | 0x0000,
    Utf8StringChunk = Flags::User as u32 | Flags::Crc as u32 | 0x0001,
    ModelAttributesChunk = Flags::User as u32 | Flags::Crc as u32 | 0x0002,
    Dictionary = Flags::User as u32 | Flags::Crc as u32 | 0x0010,
    DictionaryId = Flags::User as u32 | Flags::Crc as u32 | 0x0011,
    DictionaryEntry = Flags::User as u32 | Flags::Crc as u32 | 0x0012,
    DictionaryEnd = Flags::User as u32 | Flags::Short as u32 | 0x0013,
    XData = Flags::User as u32 | 0x0001,
    MaterialTable = Flags::Table as u32 | 0x0010,
    LayerTable = Flags::Table as u32 | 0x0011,
    LightTable = Flags::Table as u32 | 0x0012,
    ObjectTable = Flags::Table as u32 | 0x0013,
    PropertiesTable = Flags::Table as u32 | 0x0014,
    SettingsTable = Flags::Table as u32 | 0x0015,
    BitmapTable = Flags::Table as u32 | 0x0016,
    UserTable = Flags::Table as u32 | 0x0017,
    GroupTable = Flags::Table as u32 | 0x0018,
    FontTable = Flags::Table as u32 | 0x0019,
    DimStyleTable = Flags::Table as u32 | 0x0020,
    InstanceDefinitionTable = Flags::Table as u32 | 0x0021,
    HatchPatternTable = Flags::Table as u32 | 0x0022,
    LineTypeTable = Flags::Table as u32 | 0x0023,
    ObsoleteLayerSetTable = Flags::Table as u32 | 0x0024,
    TextureMappingTable = Flags::Table as u32 | 0x0025,
    HistoryRecordTable = Flags::Table as u32 | 0x0026,
    EndOfTable = 0xFFFFFFFF,
    PropertiesRevisionHistory = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0021,
    PropertiesNotes = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0022,
    PropertiesPreviewImage = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0023,
    PropertiesApplication = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0024,
    PropertiesCompressedPreviewImage = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0025,
    PropertiesOpenNurbsVersion = Flags::TableRec as u32 | Flags::Short as u32 | 0x0026,
    PropertiesAsFileName = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0027,
    SettingsPluginList = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0135,
    SettingsUnitsAndTolerances = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0031,
    SettingsRenderMesh = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0032,
    SettingsAnalysisMesh = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0033,
    SettingsAnnotation = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0034,
    SettingsNamedCPlaneList = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0035,
    SettingsNamedViewList = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0036,
    SettingsViewList = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0037,
    SettingsCurrentLayerIndex = Flags::TableRec as u32 | Flags::Short as u32 | 0x0038,
    SettingsCurrentMaterialIndex = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0039,
    SettingsCurrentColor = Flags::TableRec as u32 | Flags::Crc as u32 | 0x003A,
    SettingsNeverUseThis = Flags::TableRec as u32 | Flags::Crc as u32 | 0x003E,
    SettingsCurrentWireDensity = Flags::TableRec as u32 | Flags::Short as u32 | 0x003C,
    SettingsRender = Flags::TableRec as u32 | Flags::Crc as u32 | 0x003D,
    SettingsGridDefaults = Flags::TableRec as u32 | Flags::Crc as u32 | 0x003F,
    SettingsModelUrl = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0131,
    SettingsCurrentFontIndex = Flags::TableRec as u32 | Flags::Short as u32 | 0x0132,
    SettingsCurrentDimStyleIndex = Flags::TableRec as u32 | Flags::Short as u32 | 0x0133,
    SettingsAttributes = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0134,
    SettingsRenderUserData = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0136,
    ViewRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x003B,
    ViewCPlane = Flags::TableRec as u32 | Flags::Crc as u32 | 0x013B,
    ViewViewport = Flags::TableRec as u32 | Flags::Crc as u32 | 0x023B,
    ViewShowConGrid = Flags::TableRec as u32 | Flags::Short as u32 | 0x033B,
    ViewShowConAxes = Flags::TableRec as u32 | Flags::Short as u32 | 0x043B,
    ViewShowWorldAxes = Flags::TableRec as u32 | Flags::Short as u32 | 0x053B,
    ViewTraceImage = Flags::TableRec as u32 | Flags::Crc as u32 | 0x063B,
    ViewWallpaper = Flags::TableRec as u32 | Flags::Crc as u32 | 0x073B,
    ViewWallpaperV3 = Flags::TableRec as u32 | Flags::Crc as u32 | 0x074B,
    ViewTarget = Flags::TableRec as u32 | Flags::Crc as u32 | 0x083B,
    ViewV3DisplayMode = Flags::TableRec as u32 | Flags::Short as u32 | 0x093B,
    ViewName = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0A3B,
    ViewPosition = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0B3B,
    ViewAttributes = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0C3B,
    ViewViewportUserData = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0D3B,
    BitmapRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0090,
    MaterialRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0040,
    LayerRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0050,
    LightRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0060,
    LightRecordAttributes = Flags::Interface as u32 | Flags::Crc as u32 | 0x0061,
    LightRecordAttributesUserData = Flags::Interface as u32 | 0x0062,
    LightRecordEnd = Flags::Interface as u32 | Flags::Short as u32 | 0x006F,
    UserTableUuid = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0080,
    UserTableRecordHeader = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0082,
    UserRecord = Flags::TableRec as u32 | 0x0081,
    GroupRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0073,
    FontRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0074,
    DimStyleRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0075,
    InstanceDefinitionRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0076,
    HatchPatternRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0077,
    LineTypeRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0078,
    ObsoleteLayerSetRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0079,
    TextureMappingRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x007A,
    HistoryRecordRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x007B,
    ObjectRecord = Flags::TableRec as u32 | Flags::Crc as u32 | 0x0070,
    ObjectRecordType = Flags::Interface as u32 | Flags::Short as u32 | 0x0071,
    ObjectRecordAttributes = Flags::Interface as u32 | Flags::Crc as u32 | 0x0072,
    ObjectRecordAttributesUserData = Flags::Interface as u32 | 0x0073,
    ObjectRecordHistory = Flags::Interface as u32 | Flags::Crc as u32 | 0x0074,
    ObjectRecordHistoryHeader = Flags::Interface as u32 | Flags::Crc as u32 | 0x0075,
    ObjectRecordHistoryData = Flags::Interface as u32 | Flags::Crc as u32 | 0x0076,
    ObjectRecordEnd = Flags::Interface as u32 | Flags::Short as u32 | 0x007F,
    OpenNurbsClass = Flags::OpenNurbsObject as u32 | 0x7FFA,
    OpenNurbsClassUuid = Flags::OpenNurbsObject as u32 | Flags::Crc as u32 | 0x7FFB,
    OpenNurbsClassData = Flags::OpenNurbsObject as u32 | Flags::Crc as u32 | 0x7FFC,
    OpenNurbsClassUserData = Flags::OpenNurbsObject as u32 | 0x7FFD,
    OpenNurbsClassUserDataHeader = Flags::OpenNurbsObject as u32 | Flags::Crc as u32 | 0x7FF9,
    OpenNurbsClassEnd = Flags::OpenNurbsObject as u32 | Flags::Short as u32 | 0x7FFF,
    AnnotationSettings = Flags::Annotation as u32 | 0x0001,
    TextBlock = Flags::Annotation as u32 | 0x0004,
    AnnotationLeader = Flags::Annotation as u32 | 0x0005,
    LinearDimension = Flags::Annotation as u32 | 0x0006,
    AngularDimension = Flags::Annotation as u32 | 0x0007,
    RadialDimension = Flags::Annotation as u32 | 0x0008,
    RhinoIOObjectNurbsCurve = Flags::OpenNurbsObject as u32 | 0x0008,
    RhinoIOObjectNurbsSurface = Flags::OpenNurbsObject as u32 | 0x0009,
    RhinoIOObjectBRep = Flags::OpenNurbsObject as u32 | 0x000B,
    RhinoIOObjectData = Flags::OpenNurbsObject as u32 | 0xFFFE,
    RhinoIOObjectEnd = Flags::OpenNurbsObject as u32 | 0xFFFF,
    OpenNurbsBuffer = Flags::OpenNurbsObject as u32 | Flags::Crc as u32 | 0x0100,
    LegacyAsm = Flags::LegacyGeometry as u32 | 0x0001,
    LegacyPrt = Flags::LegacyGeometry as u32 | 0x0002,
    LegacyShl = Flags::LegacyGeometry as u32 | 0x0003,
    LegacyFac = Flags::LegacyGeometry as u32 | 0x0004,
    LegacyBnd = Flags::LegacyGeometry as u32 | 0x0005,
    LegacyTrm = Flags::LegacyGeometry as u32 | 0x0006,
    LegacySrf = Flags::LegacyGeometry as u32 | 0x0007,
    LegacyCrv = Flags::LegacyGeometry as u32 | 0x0008,
    LegacySpl = Flags::LegacyGeometry as u32 | 0x0009,
    LegacyPnt = Flags::LegacyGeometry as u32 | 0x000A,
    Stuff = Flags::Stuff as u32,
    LegacyAsmStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x0001,
    LegacyPrtStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x0002,
    LegacyShlStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x0003,
    LegacyFacStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x0004,
    LegacyBndStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x0005,
    LegacyTrmStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x0006,
    LegacySrfStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x0007,
    LegacyCrvStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x0008,
    LegacySplStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x0009,
    LegacyPntStuff = Flags::LegacyGeometry as u32 | Flags::Stuff as u32 | 0x000A,
    RhPoint = Flags::Geometry as u32 | 0x0001,
    RhSpotlight = Flags::Render as u32 | 0x0001,
    OldRhTriMesh = Flags::Geometry as u32 | 0x0011,
    OldMeshVertexNormals = Flags::Geometry as u32 | 0x0012,
    OldMeshUv = Flags::Geometry as u32 | 0x0013,
    OldFullMesh = Flags::Geometry as u32 | 0x0014,
    MeshObject = Flags::Geometry as u32 | 0x0015,
    CompressedMeshGeometry = Flags::Geometry as u32 | 0x0017,
    AnalysisMesh = Flags::Geometry as u32 | 0x0018,
    Name = Flags::Interface as u32 | 0x0001,
    View = Flags::Interface as u32 | 0x0002,
    CPlane = Flags::Interface as u32 | 0x0003,
    NamedCPlane = Flags::Interface as u32 | 0x0004,
    NamedView = Flags::Interface as u32 | 0x0005,
    Viewport = Flags::Interface as u32 | 0x0006,
    ShowGrid = Flags::Short as u32 | Flags::Interface as u32 | 0x0007,
    ShowGridAxes = Flags::Short as u32 | Flags::Interface as u32 | 0x0008,
    ShowWorldAxes = Flags::Short as u32 | Flags::Interface as u32 | 0x0009,
    ViewportPosition = Flags::Interface as u32 | 0x000A,
    ViewportTraceInfo = Flags::Interface as u32 | 0x000B,
    SnapSize = Flags::Interface as u32 | 0x000C,
    NearClipPlane = Flags::Interface as u32 | 0x000D,
    HideTrace = Flags::Interface as u32 | 0x000E,
    Notes = Flags::Interface as u32 | 0x000F,
    UnitsAndTolerances = Flags::Interface as u32 | 0x0010,
    MaximizedViewport = Flags::Short as u32 | Flags::Interface as u32 | 0x0011,
    ViewportWallpaper = Flags::Interface as u32 | 0x0012,
    Summary = Flags::Interface as u32 | 0x0013,
    BitmapPreview = Flags::Interface as u32 | 0x0014,
    ViewportV1DisplayMode = Flags::Short as u32 | Flags::Interface as u32 | 0x0015,
    Layertable = Flags::Short as u32 | Flags::Table as u32 | 0x0001,
    LayerRef = Flags::Short as u32 | Flags::TableRec as u32 | 0x0001,
    Rgb = Flags::Short as u32 | Flags::Display as u32 | 0x0001,
    TextureMap = Flags::Display as u32 | 0x0002,
    BumpMap = Flags::Display as u32 | 0x0003,
    Transparency = Flags::Short as u32 | Flags::Display as u32 | 0x0004,
    DisplayAmResolution = Flags::Short as u32 | Flags::Display as u32 | 0x0005,
    RgbDisplay = Flags::Short as u32 | Flags::Display as u32 | 0x0006,
    RenderMaterialId = Flags::Display as u32 | 0x0007,
    Layer = Flags::Display as u32 | 0x0010,
    LayerObsolete1 = Flags::Short as u32 | Flags::Display as u32 | 0x0013,
    LayerObsolete2 = Flags::Short as u32 | Flags::Display as u32 | 0x0014,
    LayerObsolete3 = Flags::Short as u32 | Flags::Display as u32 | 0x0015,
    LayerOn = Flags::Short as u32 | Flags::Display as u32 | 0x0016,
    LayerThawed = Flags::Short as u32 | Flags::Display as u32 | 0x0017,
    LayerLocked = Flags::Short as u32 | Flags::Display as u32 | 0x0018,
    LayerVisible = Flags::Short as u32 | Flags::Display as u32 | 0x0012,
    LayerPickable = Flags::Short as u32 | Flags::Display as u32 | 0x0030,
    LayerSnapable = Flags::Short as u32 | Flags::Display as u32 | 0x0031,
    LayerRenderable = Flags::Short as u32 | Flags::Display as u32 | 0x0032,
    LayerState = Flags::Short as u32 | Flags::Display as u32 | 0x0033,
    LayerIndex = Flags::Short as u32 | Flags::Display as u32 | 0x0034,
    LayerMaterialIndex = Flags::Short as u32 | Flags::Display as u32 | 0x0035,
    RenderMeshParams = Flags::Display as u32 | 0x0020,
    DisplayCpLines = Flags::Short as u32 | Flags::Display as u32 | 0x0022,
    DisplayMaxLength = Flags::Display as u32 | 0x0023,
    CurrentLayer = Flags::Short as u32 | Flags::Display as u32 | 0x0025,
    LayerName = Flags::Display as u32 | 0x0011,
    LegacyTolFit = Flags::Tolerance as u32 | 0x0001,
    LegacyTolAngle = Flags::Tolerance as u32 | 0x0002,
}

impl<V> Deserialize<V> for TypeCode
where
    V: FileVersion,
{
    type Error = ErrorStack;

    fn deserialize<T>(stream: &mut once_io::Stream<T>) -> Result<Self, Self::Error>
    where
        T: std::io::Read + std::io::Seek,
    {
        let primitive = deserialize!(u32, V, stream)?;
        match TypeCode::try_from(primitive) {
            Ok(ok) => Ok(ok),
            //TODO: improve error using the returned error
            Err(_) => Err(ErrorStack::new(Error::Simple(
                ErrorKind::InvalidChunkTypeCode,
            ))),
        }
    }
}
